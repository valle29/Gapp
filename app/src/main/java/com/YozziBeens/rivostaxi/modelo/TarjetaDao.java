package com.YozziBeens.rivostaxi.modelo;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.YozziBeens.rivostaxi.modelo.Tarjeta;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table TARJETA.
*/
public class TarjetaDao extends AbstractDao<Tarjeta, Long> {

    public static final String TABLENAME = "TARJETA";

    /**
     * Properties of entity Tarjeta.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Card_Id = new Property(1, String.class, "Card_Id", false, "CARD__ID");
        public final static Property Number_Card = new Property(2, String.class, "Number_Card", false, "NUMBER__CARD");
        public final static Property Month = new Property(3, String.class, "Month", false, "MONTH");
        public final static Property Year = new Property(4, String.class, "Year", false, "YEAR");
        public final static Property Name_Card = new Property(5, String.class, "Name_Card", false, "NAME__CARD");
    };


    public TarjetaDao(DaoConfig config) {
        super(config);
    }
    
    public TarjetaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'TARJETA' (" + //
                "'_id' INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "'CARD__ID' TEXT," + // 1: Card_Id
                "'NUMBER__CARD' TEXT," + // 2: Number_Card
                "'MONTH' TEXT," + // 3: Month
                "'YEAR' TEXT," + // 4: Year
                "'NAME__CARD' TEXT);"); // 5: Name_Card
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'TARJETA'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Tarjeta entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String Card_Id = entity.getCard_Id();
        if (Card_Id != null) {
            stmt.bindString(2, Card_Id);
        }
 
        String Number_Card = entity.getNumber_Card();
        if (Number_Card != null) {
            stmt.bindString(3, Number_Card);
        }
 
        String Month = entity.getMonth();
        if (Month != null) {
            stmt.bindString(4, Month);
        }
 
        String Year = entity.getYear();
        if (Year != null) {
            stmt.bindString(5, Year);
        }
 
        String Name_Card = entity.getName_Card();
        if (Name_Card != null) {
            stmt.bindString(6, Name_Card);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Tarjeta readEntity(Cursor cursor, int offset) {
        Tarjeta entity = new Tarjeta( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // Card_Id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Number_Card
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // Month
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // Year
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // Name_Card
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Tarjeta entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setCard_Id(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setNumber_Card(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMonth(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setYear(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setName_Card(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Tarjeta entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Tarjeta entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
